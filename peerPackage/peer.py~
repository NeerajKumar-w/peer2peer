import socket
import json
import time

class Peer:
    def broadcast(self):
        sock = socket.socket(socket.AF_INET, socket.SOCK_DGRAM)
        sock.setsockopt(socket.SOL_SOCKET, socket.SO_BROADCAST, 1)
        broadcast_ip = "255.255.255.255"
        port = 5000
        message = "Sender"
        sock.sendto(message.encode(), (broadcast_ip, port))
        print(f"Message {message} send to {broadcast_ip}:{port}")
        sock.close()
 
    def listener(self,lport):
        server_ip = "127.0.0.1"
        server_port = lport
        sock = socket.socket(socket.AF_INET, socket.SOCK_DGRAM)
        sock.bind((server_ip, server_port))
        try:
            while True:
                print("working")
                data  = sock.recv(1024)
                print("< ",data.decode())
        except KeyboardInterrupt:
            print("\nListener Stopped")
        finally:
            sock.close()

    def sender(self,sport, dport):
        server_ip = "127.0.0.1"
        server_port = sport
        sock = socket.socket(socket.AF_INET, socket.SOCK_DGRAM)
        sock.bind((server_ip, server_port))
        try:
            while True:
                message = input("> ")
                sock.sendto(message.encode("utf-8"), ("127.0.0.1", dport))
        except KeyboardInterrupt:
            print("\nSenderStopped")
        finally:
            sock.close()
